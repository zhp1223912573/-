二分查找：
    二分查找思想相对容易，关键点在于对边界的处理以及二分模板的选择。
    模板选择：
        1.如果是要找到数组中的特定值，给定的target值，为了能遍历数值中的所有元素并返回正确结果，
        我们通常使用模板1；  这样循环结束时每一个元素都能正确访问，并在访问到正确元素时直接返回，无须后续处理。
        例："搜索旋转排序数组_lc_33"
        2.如果是要找到数值中的如最小，最大或者某个小于大于特定值的第一个值，也就是有范围性的，不是完全确定的，
        我们通常使用模板2；这样循环结束是剩下的没有访问到的那个元素就是我们查找的元素。
        例：(1)"寻找重复数_lc_287"
            (2)"寻找峰值_lc_162"
        3 .模板3在我刷的题目中基本没有使用到
   特殊情况：
        有时候在范围内求解符合目标要求的值可能与受限与数据类型，出现溢出等无法正常表示的情况，此时我们
        需要转换该数值为其他类型，保证查找的正常进行。
        例：
            (1)"有效的平方数_lc_367"

   非有序性：
        二分处理的不一定都是有序的，他也可能是局部有序，我们只是利用二分大范围缩小查询区间的特性来提升算法效率，
        我们只要抓住所给的数据对象序列（如数组)内的局部特征，从而来缩小范围，找到要求的值。
        例：
            (1)"寻找旋转数组中的最小值_lc_153"
            (2)"寻找旋转数组中的最小值II_lc_154"
            (3)"寻找峰值"--该题很典型，数组内的数压根就无序，但不妨碍我们使用二分。

   双重二分（较难）：
        常规的二分查找并不是很难理解，繁琐的地方是边界处理，特殊情况处理。
        但是，一部分题目虽然可以采用二分的思想，但是如何二分才是一个难点，同时，
        有时候为了进一步提高算法效率，可能会采取两个二分来大范围缩小我们求值的范围，
        而这种题目相对来说难点比较大。

        例："找出第k小的数对距离_lc_710"

