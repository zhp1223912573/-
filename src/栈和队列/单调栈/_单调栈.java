package 栈和队列.单调栈;

/**
 * @author zhp
 * @date 2022-06-14 22:22
 * 给定一个数组，求出数组中每一个数左边以及右边距离最近且大于或小于当前数的数的坐标。
 * 1、暴力法
 *      对每一个数的左边和右边进行遍历，时间复杂度O(n^2)
 * 2、单调栈
 *     该方法只适用于数组元素无重复值
 *      （1）若要找的是大于当前数且距离最近的左右数的位置，那么设置一个从栈底到栈顶递减的栈
 *          遍历数组，将数组坐标压入栈。如果当前压入栈的数值大于栈顶，
 *          则不断弹出栈顶元素直到栈顶元素大于即将压入栈的元素，
 *          此时，即将压入栈的元素是所有要弹出的栈顶元素右边距离最近元素，
 *          弹出的栈顶元素最近左边元素是下一个即将弹出的栈顶元素(存在的话）
 *          遍历完数组后，栈中还剩下一些元素，同样按照上述规则依次弹出即可。
 *
 *      （2）若要找的是小于当前数且距离最近的左右数的位置，那么设置一个从栈底到栈顶递增的栈即可
 *          剩下的步骤与上述基本一致
 *
 *
 *
 *   若数组元素存在重复值，
 *      其他步骤基本一致，只需要在弹出过程中，遇到相同数组元素时，将当前坐标
 *      与数值一样的元素放在栈中一样的位置，后面弹出到该元素时，取出最后一个加入该元素的位置即可。
 */
public class _单调栈 {
}
