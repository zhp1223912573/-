package 贪心;

/**
 * @author zhp
 * @date 2022-07-02 15:40
 * 给定一个有序数组arr,代表数轴上从左到右有n个点arr[0]、arr[1]...arr[n一1]，
 * 给定一个正数儿，代表一根长度为的绳子，求绳子最多能覆盖其中的几个点。
 */
public class _绳子能覆盖的点 {

    /**
     * 一般解法
     * 穷举法
     *
     */

    /**
     * 典型的贪心思想，
     * 我们假定始终将绳子的右段放置到每个有点的位置上，这样避免了不必要的情况判断
     * 所以主要的问题转化为统计每个点在其左边绳子长度范围内的点数。
     * 这样的转换，简化了问题规模，我们只需要计算每个点左边绳子长度范围内点的数量。
     * 达到了O（n*logn),n为所有点数，向前检测时使用二分法找到能覆盖的最远的点
     */

    /**
     * 滑动窗口 数组.双指针
     * 双指针指指向一个滑动的窗口，不断移动左右指针，
     * 若右指针和左指针维护的窗口长度小于绳子长度说明可以继续移动，若超出则需要移动左指针
     * O（n）
     */

}
